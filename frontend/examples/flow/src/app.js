/**
 * Copyright 2016 Google Inc. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/license-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the license.
 */

var anypixel = require('anypixel');
var canvas = anypixel.canvas;
var ctx = canvas.getContext2D();

// Constant controls speed of the overall 'flow'
const scrollSpeedMultiplier = 0.5;

// Constant controls speed of the color change when touching the buttons
const touchSpeedMultiplier = 20;

// Array holds the color values for each pixel. Values are run through `colorForPercent`.
var colorArr;

// The color on the leading edge
var leadingColor;

// Array holds a boolean state for each button/pixel. Boolean indicates if button is pressed.
var buttonStates;

// Icon is the Google logo
const iconWidth = 91;
const iconHeight = 30;
const icon = [
  0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.6,0.6,0.7,0.7,0.7,0.6,0.6,0.6,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,
  0.0,0.0,0.0,0.0,0.0,0.0,0.6,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.6,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.6,0.7,0.7,0.6,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,
  0.0,0.0,0.0,0.0,0.6,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.6,0.7,0.7,0.6,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,
  0.0,0.0,0.0,0.6,0.7,0.7,0.7,0.7,0.7,0.6,0.6,0.6,0.6,0.6,0.7,0.7,0.7,0.7,0.7,0.6,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.6,0.7,0.7,0.6,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,
  0.0,0.0,0.6,0.7,0.7,0.7,0.7,0.6,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.6,0.7,0.7,0.6,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.6,0.7,0.7,0.6,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,
  0.0,0.6,0.7,0.7,0.7,0.7,0.6,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.6,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.6,0.7,0.7,0.6,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,
  0.0,0.7,0.7,0.7,0.7,0.6,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.6,0.7,0.7,0.6,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,
  0.6,0.7,0.7,0.7,0.6,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.6,0.7,0.7,0.6,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,
  0.6,0.7,0.7,0.7,0.6,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.6,0.6,0.6,0.6,0.6,0.6,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.6,0.6,0.6,0.6,0.6,0.6,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.6,0.6,0.6,0.6,0.6,0.6,0.0,0.6,0.6,0.6,0.0,0.0,0.6,0.7,0.7,0.6,0.0,0.0,0.0,0.0,0.0,0.6,0.6,0.6,0.6,0.6,0.0,0.0,0.0,0.0,0.0,
  0.7,0.7,0.7,0.7,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.6,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.6,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.6,0.7,0.7,0.7,0.7,0.7,0.7,0.6,0.7,0.7,0.7,0.6,0.0,0.6,0.7,0.7,0.6,0.0,0.0,0.0,0.6,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.6,0.0,0.0,0.0,
  0.7,0.7,0.7,0.6,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.6,0.6,0.6,0.6,0.6,0.6,0.6,0.6,0.6,0.6,0.0,0.0,0.0,0.6,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.6,0.0,0.0,0.0,0.0,0.0,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.6,0.0,0.0,0.0,0.0,0.0,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.6,0.0,0.6,0.7,0.7,0.6,0.0,0.0,0.6,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.6,0.0,0.0,
  0.7,0.7,0.7,0.6,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.6,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.6,0.0,0.0,0.7,0.7,0.7,0.7,0.7,0.6,0.6,0.6,0.7,0.7,0.7,0.7,0.6,0.0,0.0,0.0,0.7,0.7,0.7,0.7,0.7,0.6,0.6,0.6,0.7,0.7,0.7,0.7,0.6,0.0,0.0,0.0,0.7,0.7,0.7,0.7,0.7,0.6,0.6,0.6,0.7,0.7,0.7,0.7,0.7,0.6,0.0,0.6,0.7,0.7,0.6,0.0,0.6,0.7,0.7,0.7,0.7,0.6,0.6,0.6,0.6,0.7,0.7,0.7,0.6,0.0,
  0.7,0.7,0.7,0.6,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.6,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.6,0.0,0.6,0.7,0.7,0.7,0.6,0.0,0.0,0.0,0.0,0.0,0.7,0.7,0.7,0.7,0.0,0.0,0.6,0.7,0.7,0.7,0.6,0.0,0.0,0.0,0.0,0.0,0.7,0.7,0.7,0.7,0.6,0.0,0.6,0.7,0.7,0.7,0.6,0.0,0.0,0.0,0.0,0.0,0.7,0.7,0.7,0.7,0.6,0.0,0.6,0.7,0.7,0.6,0.0,0.7,0.7,0.7,0.7,0.6,0.0,0.0,0.0,0.0,0.7,0.7,0.7,0.7,0.0,
  0.7,0.7,0.7,0.7,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.6,0.6,0.6,0.6,0.6,0.6,0.6,0.7,0.7,0.7,0.6,0.0,0.7,0.7,0.7,0.7,0.0,0.0,0.0,0.0,0.0,0.0,0.6,0.7,0.7,0.7,0.6,0.0,0.7,0.7,0.7,0.7,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.7,0.7,0.7,0.6,0.0,0.6,0.7,0.7,0.7,0.0,0.0,0.0,0.0,0.0,0.0,0.6,0.7,0.7,0.7,0.6,0.0,0.6,0.7,0.7,0.6,0.0,0.7,0.7,0.7,0.6,0.0,0.0,0.0,0.6,0.7,0.7,0.7,0.7,0.7,0.6,
  0.6,0.7,0.7,0.7,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.7,0.7,0.7,0.6,0.0,0.7,0.7,0.7,0.6,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.7,0.7,0.7,0.6,0.0,0.7,0.7,0.7,0.6,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.6,0.7,0.7,0.6,0.0,0.7,0.7,0.7,0.6,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.7,0.7,0.7,0.6,0.0,0.6,0.7,0.7,0.6,0.6,0.7,0.7,0.7,0.0,0.6,0.6,0.7,0.7,0.7,0.7,0.7,0.6,0.6,0.0,
  0.6,0.7,0.7,0.7,0.6,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.6,0.7,0.7,0.7,0.6,0.0,0.7,0.7,0.7,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.6,0.7,0.7,0.6,0.6,0.7,0.7,0.7,0.6,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.6,0.7,0.7,0.7,0.0,0.7,0.7,0.7,0.6,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.6,0.7,0.7,0.6,0.0,0.6,0.7,0.7,0.6,0.6,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.6,0.0,0.0,0.0,0.0,
  0.0,0.7,0.7,0.7,0.7,0.6,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.6,0.7,0.7,0.7,0.0,0.6,0.7,0.7,0.7,0.6,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.6,0.7,0.7,0.6,0.0,0.7,0.7,0.7,0.6,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.6,0.7,0.7,0.7,0.0,0.7,0.7,0.7,0.6,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.6,0.7,0.7,0.6,0.0,0.6,0.7,0.7,0.6,0.6,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.6,0.0,0.0,0.0,0.0,0.0,0.0,
  0.0,0.6,0.7,0.7,0.7,0.7,0.6,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.6,0.7,0.7,0.7,0.6,0.0,0.0,0.7,0.7,0.7,0.6,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.7,0.7,0.7,0.6,0.0,0.7,0.7,0.7,0.6,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.7,0.7,0.7,0.6,0.0,0.7,0.7,0.7,0.6,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.7,0.7,0.7,0.6,0.0,0.6,0.7,0.7,0.6,0.6,0.7,0.7,0.7,0.7,0.6,0.6,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,
  0.0,0.0,0.6,0.7,0.7,0.7,0.7,0.6,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.6,0.7,0.7,0.7,0.7,0.0,0.0,0.0,0.6,0.7,0.7,0.7,0.0,0.0,0.0,0.0,0.0,0.0,0.6,0.7,0.7,0.7,0.6,0.0,0.6,0.7,0.7,0.7,0.6,0.0,0.0,0.0,0.0,0.0,0.6,0.7,0.7,0.7,0.6,0.0,0.6,0.7,0.7,0.7,0.6,0.0,0.0,0.0,0.0,0.0,0.6,0.7,0.7,0.7,0.6,0.0,0.6,0.7,0.7,0.6,0.0,0.7,0.7,0.7,0.7,0.0,0.0,0.0,0.0,0.0,0.0,0.6,0.6,0.0,0.0,
  0.0,0.0,0.0,0.6,0.7,0.7,0.7,0.7,0.7,0.6,0.6,0.0,0.0,0.6,0.6,0.7,0.7,0.7,0.7,0.7,0.6,0.0,0.0,0.0,0.6,0.7,0.7,0.7,0.7,0.6,0.0,0.0,0.0,0.6,0.7,0.7,0.7,0.7,0.0,0.0,0.6,0.7,0.7,0.7,0.7,0.6,0.0,0.0,0.0,0.6,0.7,0.7,0.7,0.7,0.0,0.0,0.0,0.7,0.7,0.7,0.7,0.6,0.0,0.0,0.0,0.6,0.7,0.7,0.7,0.7,0.6,0.0,0.6,0.7,0.7,0.6,0.0,0.6,0.7,0.7,0.7,0.7,0.0,0.0,0.0,0.0,0.7,0.7,0.7,0.6,0.0,
  0.0,0.0,0.0,0.0,0.6,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.6,0.0,0.0,0.0,0.0,0.0,0.6,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.6,0.0,0.0,0.0,0.6,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.6,0.0,0.0,0.0,0.6,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.6,0.0,0.6,0.7,0.7,0.6,0.0,0.0,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.0,
  0.0,0.0,0.0,0.0,0.0,0.6,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.6,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.6,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.6,0.0,0.0,0.0,0.0,0.0,0.6,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.6,0.0,0.0,0.0,0.0,0.0,0.6,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.6,0.0,0.6,0.7,0.7,0.6,0.0,0.0,0.0,0.6,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.6,0.0,0.0,
  0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.6,0.6,0.7,0.7,0.7,0.7,0.7,0.7,0.6,0.6,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.6,0.6,0.7,0.7,0.7,0.7,0.7,0.6,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.6,0.6,0.7,0.7,0.7,0.7,0.7,0.6,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.6,0.7,0.7,0.7,0.7,0.6,0.6,0.7,0.7,0.7,0.6,0.0,0.6,0.6,0.6,0.0,0.0,0.0,0.0,0.0,0.6,0.7,0.7,0.7,0.7,0.7,0.7,0.6,0.0,0.0,0.0,
  0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.7,0.7,0.7,0.6,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,
  0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.6,0.6,0.0,0.0,0.0,0.0,0.0,0.0,0.6,0.7,0.7,0.7,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,
  0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.6,0.7,0.7,0.7,0.6,0.0,0.0,0.0,0.0,0.0,0.7,0.7,0.7,0.7,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,
  0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.7,0.7,0.7,0.7,0.6,0.6,0.6,0.6,0.7,0.7,0.7,0.7,0.6,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,
  0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.6,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,
  0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.6,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,
  0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.6,0.6,0.7,0.7,0.6,0.6,0.6,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,
];

function iconValue(x,y) {
  if (x < 0 || x > (iconWidth-1) || y < 0 || y > (iconHeight-1)) {
    return 0;
  }
  return icon[x+iconWidth*y];
}

/**
 * Converts a number to a color by circling around the HSL color space.
 */
function colorForPercent(percent) {
  if (percent > 1) {
    percent = percent - Math.round(percent);
  } else if (percent < 0) {
    percent = 1 + (percent - Math.round(percent));
  }
  return "hsl("+(percent*360)+", 100%, 50%)";
}

document.addEventListener('onButtonDown', function(event) {
  // Update which pixels are touched
  var index = event.detail.x*ctx.canvas.clientHeight+event.detail.y;
  buttonStates[index] = true;
});

document.addEventListener('onButtonUp', function(event) {
  // Update which pixels are touched
  var index = event.detail.x*ctx.canvas.clientHeight+event.detail.y;
  buttonStates[index] = false;
});

document.addEventListener('DOMContentLoaded', function() {
  // Initial set up: assign the colors of the spectrum.
  colorArr = new Array();
  buttonStates = new Array();
  var width = ctx.canvas.clientWidth;
  var height = ctx.canvas.clientHeight;
  for(var i = 0; i < width; i++) {
    leadingColor = i/width;
    for(var j = 0; j < height; j++) {
      colorArr.push(leadingColor);
      buttonStates.push(false);
    }
  }
	window.requestAnimationFrame(update);
}, false);

function update(t) {

  var width = ctx.canvas.clientWidth;
  var height = ctx.canvas.clientHeight;
  var increment = (1/width)*scrollSpeedMultiplier;
  leadingColor += increment;

	//iterate over all color values and update
  var leadingEdge = width-1;
  var iconOffsetX = Math.round((width-iconWidth)/2);
  var iconOffsetY = Math.round((height-iconHeight)/2);
  for(var i = 0; i < width; i++) {
    for(var j = 0; j < height; j++) {
      var index = i*height+j;
      if (buttonStates[index]) {
        // This pixel is being pressed
        colorArr[index] = colorArr[index] - increment*touchSpeedMultiplier;
      } else {
        // This pixel is not being pressed
        if (i == leadingEdge) {
          // This pixel is on the leading edge
          colorArr[index] = leadingColor;
        } else {
          // This pixel is not on the edge
          var nextRowIndex = index+height;
          colorArr[index] = colorArr[nextRowIndex];
        }
      }
      // Change the color if this pixel is part of the icon
      var colorVal = colorArr[index];
      colorVal += iconValue(i-iconOffsetX, j-iconOffsetY);

      // Set the color to be the value from the color array, passed through `colorForPercent`.
      ctx.fillStyle = colorForPercent(colorVal);
      ctx.fillRect(i,j,1,1);
    }
  }
  window.requestAnimationFrame(update);
}
